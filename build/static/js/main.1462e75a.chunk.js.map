{"version":3,"sources":["../node_modules/simplex-noise/simplex-noise.js","mouse.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","hud.js","key.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","Fire.js","fluidmanager.js","particle.js","digger.js","eater.js","bullet.js","player.js","grid.js","entitymanager.js","terrain.js","levels.js","camera.js","leveltransition.js","gamestate.js","ui.js","main.js","index.js"],"names":["F2","Math","sqrt","G2","G3","F4","G4","SimplexNoise","randomOrSeed","random","s0","s1","s2","c","mash","masher","i","arguments","length","t","alea","this","p","buildPermutationTable","perm","Uint8Array","permMod12","r","aux","n","data","toString","h","charCodeAt","prototype","grad3","Float32Array","grad4","noise2D","xin","yin","i1","j1","n0","n1","n2","s","floor","j","x0","y0","x1","y1","x2","y2","ii","jj","t0","gi0","t1","gi1","t2","gi2","noise3D","zin","n3","k1","i2","j2","k2","k","z0","z1","z2","x3","y3","z3","kk","t3","gi3","noise4D","x","y","z","w","n4","l1","l2","i3","j3","k3","l3","l","w0","rankx","ranky","rankz","rankw","w1","w2","w3","x4","y4","z4","w4","ll","t4","gi4","_buildPermutationTable","define","exports","module","Mouse","ox","oy","vx","vy","leftDown","rightDown","width","height","leftHit","init","el","onmousemove","e","offsetX","offsetY","onmousedown","button","onmouseup","onmouseout","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","HUD","hitAnimation","hitAnimationLength","currentHitAnimationLength","ctx","player","gameState","resetTransform","fillStyle","fillRect","health","font","text","measureText","fillText","parseInt","grid","totalPurple","v","entityManager","levelConfig","goal","hit","alpha","Key","_pressed","LEFT","UP","RIGHT","DOWN","SPACE","W","S","A","D","Z","B","R","M","isDown","keyCode","isHit","onKeydown","event","repeat","onKeyup","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelper","o","Symbol","iterator","isArray","minLen","call","slice","constructor","name","from","test","F","done","value","_e","f","it","err","normalCompletion","didErr","step","next","_e2","window","addEventListener","Fire","life","type","dt","getBlockValue","setBlockValue","addEntity","deleteFlag","FluidManager","particles","mgr","noFail","idx","splice","spawned","waterSupply","a","PI","push","FluidParticle","tileSize","sin","outerRadius","cos","deleteParticles","gridsW","ceil","totW","gridsH","totH","grids","fill","map","g","particle","vel","force","pos","density","densityNear","neighbors","dryTimer","abs","resist","max","baseX","baseY","dx","dy","dist","collideGrid","cellX","min","cellY","isNaN","calcGrid","g1","g2","particle1","particle2","q","qsq","Neighbor","gw","gh","cur","lowEdge","pressure","pressureNear","neighbor","dm","viscX","viscY","forceX","forceY","p1m","mass","p2m","radius","gx","gy","blockRadius","rX","rY","boundsCheck","blockVal","tiles","coordY","diffX","diffY","entities","nx","ny","radDiff","col","Particle","color","startFade","translate","Digger","angle","turn","history","straightTimer","fluid","unshift","pop","bx","worldToGrid","by","blockValue","explode","ent","flash","strokeStyle","node","beginPath","arc","stroke","cnt","Eater","dir","jumpTime","diffTime","oldX","oldY","eating","totalEaten","manager","atan2","sx","sy","collideClosestGrid","wasEating","tile","lineWidth","extraAngle","negArc","rotate","lineTo","closePath","moveTo","Bullet","randVel","diggers","eaters","Player","maxVel","shootCooldown","mdx","mdy","camAngle","cam","Grid","debugMode","colors","colorsDark","chunkWidth","CHUNK_WIDTH","chunkHeight","chunks","dirtyChunks","Map","index","vec","cx","cy","chunk","Chunk","rebuild","buildChunks","oldValue","chunkX","chunkY","dirty","set","fixed","values","forEach","delete","image","imageX","imageY","drawImage","visited","padding","canv","document","createElement","getContext","extraPx","strokeRect","newImage","Image","onload","src","toDataURL","EntityManager","fluidManager","update","beforeDelete","render","generatePlanet","seed","surfaceVariance","interiorFill","coreRadius","lavaMode","surfaceSimplex","Simplex","interiorSimplex","interiorSimplex2","lavaSimplex","Int8Array","fillValueThreshold","selfRad","bumpyRadius","lava","level_configs","gen","message","d","eaterCount","menu_config","Camera","startVec","zoom","position","LevelTransition","switchCallback","delay","fadeIn","wait","fadeOut","canvas","lines","split","GameState","screenW","screenH","inMainMenu","isPlaying","currentlyDead","deathCount","levelCount","levelTransition","mainMenu","rad","processGridForLava","start","rebuildDirty","reset","checkWin","UI","buttonList","lp","startButton","Button","mousePos","console","log","isInside","rect","lpos","labelPosition","gs","hud","ui","stars","oldTime","delta","setTransform","Date","getTime","transform","getCorner","levelRad","grad","createRadialGradient","addColorStop","renderChunks","renderLevelTransition","requestAnimationFrame","context","cctx","setupMainMenu","startGame","id","getElementById","initCanvas"],"mappings":"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","file":"static/js/main.1462e75a.chunk.js","sourcesContent":["/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n\n Copyright (c) 2018 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n(function() {\n  'use strict';\n\n  var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n  var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n  var F3 = 1.0 / 3.0;\n  var G3 = 1.0 / 6.0;\n  var F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\n  var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\n\n  function SimplexNoise(randomOrSeed) {\n    var random;\n    if (typeof randomOrSeed == 'function') {\n      random = randomOrSeed;\n    }\n    else if (randomOrSeed) {\n      random = alea(randomOrSeed);\n    } else {\n      random = Math.random;\n    }\n    this.p = buildPermutationTable(random);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n    for (var i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n\n  }\n  SimplexNoise.prototype = {\n    grad3: new Float32Array([1, 1, 0,\n      -1, 1, 0,\n      1, -1, 0,\n\n      -1, -1, 0,\n      1, 0, 1,\n      -1, 0, 1,\n\n      1, 0, -1,\n      -1, 0, -1,\n      0, 1, 1,\n\n      0, -1, 1,\n      0, 1, -1,\n      0, -1, -1]),\n    grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n      0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n      1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n      -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n      1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n      -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n      1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n      -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),\n    noise2D: function(xin, yin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0 = 0; // Noise contributions from the three corners\n      var n1 = 0;\n      var n2 = 0;\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin) * F2; // Hairy factor for 2D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var t = (i + j) * G2;\n      var X0 = i - t; // Unskew the cell origin back to (x,y) space\n      var Y0 = j - t;\n      var x0 = xin - X0; // The x,y distances from the cell origin\n      var y0 = yin - Y0;\n      // For the 2D case, the simplex shape is an equilateral triangle.\n      // Determine which simplex we are in.\n      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      else {\n        i1 = 0;\n        j1 = 1;\n      } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n      // c = (3-sqrt(3))/6\n      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n      var y1 = y0 - j1 + G2;\n      var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n      var y2 = y0 - 1.0 + 2.0 * G2;\n      // Work out the hashed gradient indices of the three simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      // Calculate the contribution from the three corners\n      var t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 >= 0) {\n        var gi0 = permMod12[ii + perm[jj]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n      }\n      var t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 >= 0) {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n      }\n      var t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 >= 0) {\n        var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to return values in the interval [-1,1].\n      return 70.0 * (n0 + n1 + n2);\n    },\n    // 3D simplex noise\n    noise3D: function(xin, yin, zin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0, n1, n2, n3; // Noise contributions from the four corners\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var k = Math.floor(zin + s);\n      var t = (i + j + k) * G3;\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var x0 = xin - X0; // The x,y,z distances from the cell origin\n      var y0 = yin - Y0;\n      var z0 = zin - Z0;\n      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n      // Determine which simplex we are in.\n      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // X Y Z order\n        else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // X Z Y order\n        else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // Z X Y order\n      }\n      else { // x0<y0\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Z Y X order\n        else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Y Z X order\n        else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // Y X Z order\n      }\n      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n      // c = 1/6.\n      var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n      var y1 = y0 - j1 + G3;\n      var z1 = z0 - k1 + G3;\n      var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n      var y2 = y0 - j2 + 2.0 * G3;\n      var z2 = z0 - k2 + 2.0 * G3;\n      var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n      var y3 = y0 - 1.0 + 3.0 * G3;\n      var z3 = z0 - 1.0 + 3.0 * G3;\n      // Work out the hashed gradient indices of the four simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      // Calculate the contribution from the four corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to stay just inside [-1,1]\n      return 32.0 * (n0 + n1 + n2 + n3);\n    },\n    // 4D simplex noise, better simplex rank ordering method 2012-03-09\n    noise4D: function(x, y, z, w) {\n      var perm = this.perm;\n      var grad4 = this.grad4;\n\n      var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n      // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n      var s = (x + y + z + w) * F4; // Factor for 4D skewing\n      var i = Math.floor(x + s);\n      var j = Math.floor(y + s);\n      var k = Math.floor(z + s);\n      var l = Math.floor(w + s);\n      var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var W0 = l - t;\n      var x0 = x - X0; // The x,y,z,w distances from the cell origin\n      var y0 = y - Y0;\n      var z0 = z - Z0;\n      var w0 = w - W0;\n      // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n      // To find out which of the 24 possible simplices we're in, we need to\n      // determine the magnitude ordering of x0, y0, z0 and w0.\n      // Six pair-wise comparisons are performed between each possible pair\n      // of the four coordinates, and the results are used to rank the numbers.\n      var rankx = 0;\n      var ranky = 0;\n      var rankz = 0;\n      var rankw = 0;\n      if (x0 > y0) rankx++;\n      else ranky++;\n      if (x0 > z0) rankx++;\n      else rankz++;\n      if (x0 > w0) rankx++;\n      else rankw++;\n      if (y0 > z0) ranky++;\n      else rankz++;\n      if (y0 > w0) ranky++;\n      else rankw++;\n      if (z0 > w0) rankz++;\n      else rankw++;\n      var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n      var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n      var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n      // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n      // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n      // impossible. Only the 24 indices which have non-zero entries make any sense.\n      // We use a thresholding to set the coordinates in turn from the largest magnitude.\n      // Rank 3 denotes the largest coordinate.\n      i1 = rankx >= 3 ? 1 : 0;\n      j1 = ranky >= 3 ? 1 : 0;\n      k1 = rankz >= 3 ? 1 : 0;\n      l1 = rankw >= 3 ? 1 : 0;\n      // Rank 2 denotes the second largest coordinate.\n      i2 = rankx >= 2 ? 1 : 0;\n      j2 = ranky >= 2 ? 1 : 0;\n      k2 = rankz >= 2 ? 1 : 0;\n      l2 = rankw >= 2 ? 1 : 0;\n      // Rank 1 denotes the second smallest coordinate.\n      i3 = rankx >= 1 ? 1 : 0;\n      j3 = ranky >= 1 ? 1 : 0;\n      k3 = rankz >= 1 ? 1 : 0;\n      l3 = rankw >= 1 ? 1 : 0;\n      // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n      var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n      var y1 = y0 - j1 + G4;\n      var z1 = z0 - k1 + G4;\n      var w1 = w0 - l1 + G4;\n      var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n      var y2 = y0 - j2 + 2.0 * G4;\n      var z2 = z0 - k2 + 2.0 * G4;\n      var w2 = w0 - l2 + 2.0 * G4;\n      var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n      var y3 = y0 - j3 + 3.0 * G4;\n      var z3 = z0 - k3 + 3.0 * G4;\n      var w3 = w0 - l3 + 3.0 * G4;\n      var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n      var y4 = y0 - 1.0 + 4.0 * G4;\n      var z4 = z0 - 1.0 + 4.0 * G4;\n      var w4 = w0 - 1.0 + 4.0 * G4;\n      // Work out the hashed gradient indices of the five simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      var ll = l & 255;\n      // Calculate the contribution from the five corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n      }\n      var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) n4 = 0.0;\n      else {\n        var gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n        t4 *= t4;\n        n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n      }\n      // Sum up and scale the result to cover the range [-1,1]\n      return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    }\n  };\n\n  function buildPermutationTable(random) {\n    var i;\n    var p = new Uint8Array(256);\n    for (i = 0; i < 256; i++) {\n      p[i] = i;\n    }\n    for (i = 0; i < 255; i++) {\n      var r = i + ~~(random() * (256 - i));\n      var aux = p[i];\n      p[i] = p[r];\n      p[r] = aux;\n    }\n    return p;\n  }\n  SimplexNoise._buildPermutationTable = buildPermutationTable;\n\n  function alea() {\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    var mash = masher();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for (var i = 0; i < arguments.length; i++) {\n      s0 -= mash(arguments[i]);\n      if (s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(arguments[i]);\n      if (s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(arguments[i]);\n      if (s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n    return function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n  }\n  function masher() {\n    var n = 0xefc8249d;\n    return function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n  }\n\n  // amd\n  if (typeof define !== 'undefined' && define.amd) define(function() {return SimplexNoise;});\n  // common js\n  if (typeof exports !== 'undefined') exports.SimplexNoise = SimplexNoise;\n  // browser\n  else if (typeof window !== 'undefined') window.SimplexNoise = SimplexNoise;\n  // nodejs\n  if (typeof module !== 'undefined') {\n    module.exports = SimplexNoise;\n  }\n\n})();\n","export const Mouse = {\r\n    x: 0,\r\n    y: 0,\r\n    ox: 0,\r\n    oy: 0,\r\n    vx: 0,\r\n    vy: 0,\r\n    leftDown: false,\r\n    rightDown: false,\r\n    width: 0,\r\n    height: 0,\r\n    leftHit: function() {\r\n        if (this.leftDown) {\r\n            this.leftDown = false;\r\n            return true;\r\n        }\r\n    },\r\n\r\n    init: function(el) {\r\n        this.width = el.width;\r\n        this.height = el.height;\r\n        el.onmousemove = (e) => {\r\n            this.ox = this.x;\r\n            this.oy = this.y;\r\n            this.x = e.offsetX;\r\n            this.y = e.offsetY;\r\n            this.vx = this.x - this.ox;\r\n            this.vy = this.y - this.oy;\r\n        }\r\n        el.onmousedown = (e) => {\r\n            if (e.button === 0) {\r\n                this.leftDown = true;\r\n            }\r\n            if (e.button === 2) {\r\n                this.rightDown = true;\r\n            }\r\n        }\r\n        el.onmouseup = (e) => {\r\n            if (e.button === 0) {\r\n                this.leftDown = false;\r\n            }\r\n            if (e.button === 2) {\r\n                this.rightDown = false;\r\n            }\r\n        }\r\n        el.onmouseout = () => {\r\n            this.leftDown = false;\r\n            this.rightDown = false;\r\n        }\r\n    }\r\n};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export class HUD {\r\n    constructor(w, h) {\r\n        this.height = h;\r\n        this.width = w;\r\n        this.hitAnimation = false;\r\n        this.hitAnimationLength = 100;\r\n        this.currentHitAnimationLength = 100;\r\n    }\r\n\r\n    render(ctx, player, gameState) {\r\n        ctx.resetTransform();\r\n\r\n        // player health\r\n        ctx.fillStyle = 'rgba(0, 127, 0, 1.0)';\r\n        ctx.fillRect(10, 10, 100, 10);\r\n        if (player.health > 0)  {\r\n            ctx.fillStyle = 'rgba(86, 255, 86, 0.8)';\r\n            ctx.fillRect(10, 10, player.health, 10);\r\n        } else {\r\n            ctx.fillStyle = 'rgba(0, 0, 0, .8)';\r\n            ctx.fillRect(0, 0, this.width, this.height);\r\n            ctx.font = '40px cousine';\r\n            let text = 'DEAD';\r\n            let t = ctx.measureText(text)\r\n            ctx.fillStyle = 'rgba(255, 0, 0, .8)';\r\n            ctx.fillText(text, this.width/2 - t.width/2, this.height/2);\r\n            text = 'PRESS R TO RESTART'\r\n            t = ctx.measureText(text);\r\n            ctx.fillText(text, this.width/2 - t.width/2, this.height/2 + parseInt(ctx.font) * 2);\r\n        }\r\n\r\n        ctx.fillStyle = 'rgba(72, 0, 98, 0.8)';\r\n        ctx.fillRect(10, 30, 100, 10);\r\n        if (gameState.grid.totalPurple > 0) {\r\n            ctx.fillStyle = 'rgba(128, 0, 128, 1.0)';\r\n            let v = 100 * (gameState.grid.totalPurple / gameState.entityManager.levelConfig.goal);\r\n            ctx.fillRect(10, 30, v, 10);\r\n        }\r\n\r\n\r\n\r\n        // TODO: draw death screen\r\n\r\n        if (player.hit || this.hitAnimation) {\r\n            this.hitAnimation = true;\r\n            let alpha = 0.5 * (this.currentHitAnimationLength / this.hitAnimationLength);\r\n            ctx.fillStyle = 'rgba(255, 0, 0, ' + alpha +  ')';\r\n            ctx.fillRect(0, 0, this.width, this.height);\r\n            this.currentHitAnimationLength--;\r\n            if (this.currentHitAnimationLength < 0) {\r\n                this.currentHitAnimationLength = 50;\r\n                this.hitAnimation = false;\r\n            }\r\n        }\r\n    }\r\n}","export const Key = {\r\n    _pressed: {},\r\n  \r\n    LEFT: 37,\r\n    UP: 38,\r\n    RIGHT: 39,\r\n    DOWN: 40,\r\n    SPACE: 32,\r\n    W: 87,\r\n    S: 83,\r\n    A: 65,\r\n    D: 68,\r\n    Z: 90,\r\n    B: 66,\r\n    R: 82,\r\n    M: 77,\r\n    F2: 113,\r\n    \r\n    isDown: function(keyCode) {\r\n      return this._pressed[keyCode];\r\n    },\r\n\r\n    isHit: function(keyCode) {\r\n      let v = !!this._pressed[keyCode];\r\n      delete this._pressed[keyCode];\r\n      return v;\r\n    },\r\n    \r\n    onKeydown: function(event) {\r\n      if (event.repeat) {\r\n        return;\r\n      }\r\n      this._pressed[event.keyCode] = true;\r\n    },\r\n    \r\n    onKeyup: function(event) {\r\n      delete this._pressed[event.keyCode];\r\n    }\r\n};\r\n\r\nwindow.addEventListener('keyup', function(event) { Key.onKeyup(event); }, false);\r\nwindow.addEventListener('keydown', function(event) { Key.onKeydown(event); }, false);","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export class Fire {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.life = 20 + Math.floor(Math.random() * 10);\r\n        this.type = 'fire';\r\n    }\r\n\r\n    update(entityManager, grid, dt) {\r\n        this.life--;\r\n        if (this.life == 15) {\r\n            //spread\r\n            for (let x = -1; x <= 1; x++) {\r\n                for (let y = -1; y <= 1; y++) {\r\n                    if (grid.getBlockValue(x+this.x, y+this.y) === 5) {\r\n                        grid.setBlockValue(x+this.x, y+this.y, 6);\r\n                        entityManager.addEntity(new Fire(x+this.x, y+this.y));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.life === 0) {\r\n            this.deleteFlag = true;\r\n            grid.setBlockValue(this.x, this.y, 7);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n    }\r\n}","import { Fire } from \"./Fire\";\r\n\r\nexport class FluidManager {\r\n    constructor() {\r\n        this.particles = [];\r\n    }\r\n\r\n    resetParticles() {\r\n        this.particles.length = 0;\r\n    }\r\n\r\n    deleteParticles(mgr) {\r\n        if (mgr.levelConfig.noFail && this.particles.length > 0) {\r\n            let idx = Math.floor(Math.random() * this.particles.length);\r\n            if (this.particles[idx].type === 0) {\r\n                this.particles.splice(idx, 1);\r\n            }\r\n        }\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            if (this.particles[i].deleteFlag) {\r\n                this.particles.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n\r\n    update(grid, dt, entityManager) {\r\n        let spawned = 0;\r\n        while (this.particles.length < entityManager.levelConfig.waterSupply && spawned < 10) {\r\n            spawned++;\r\n            let a = Math.random() * 2 * Math.PI;\r\n            this.particles.push(new FluidParticle(grid.width*grid.tileSize/2 + Math.sin(a) * entityManager.levelConfig.outerRadius*4, grid.height*grid.tileSize/2 + Math.cos(a) * entityManager.levelConfig.outerRadius*4, 0));\r\n        }\r\n\r\n        this.deleteParticles(entityManager);\r\n\r\n        const kNear = .1;\r\n        const k = .05;\r\n        const restDensity = 1;\r\n        const radius = 20;\r\n        const visc = .003;\r\n\r\n        let totW = 600*4;\r\n        let totH = 600*4;\r\n        let cellSize = 30;\r\n        let gridsW = Math.ceil(totW/cellSize);\r\n        let gridsH = Math.ceil(totH/cellSize);\r\n        let grids = new Array(gridsW * gridsH).fill(0);\r\n        grids = grids.map(g => new Array());\r\n        \r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            let particle = this.particles[i];\r\n            particle.vel.x += particle.force.x;\r\n            particle.vel.y += particle.force.y;\r\n            particle.vel.x *= .999;\r\n            particle.vel.y *= .999;\r\n            particle.pos.x += particle.vel.x*dt;\r\n            particle.pos.y += particle.vel.y*dt;\r\n            particle.force.x = 0;\r\n            particle.force.y = 0;\r\n            particle.density = 0;\r\n            particle.densityNear = 0;\r\n            particle.neighbors = [];\r\n\r\n            if (particle.type === 2) {\r\n                if (!particle.dryTimer) {\r\n                    particle.dryTimer = 0;\r\n                }\r\n                if (Math.abs(particle.vel.x) + Math.abs(particle.vel.y) > .3) {\r\n                    particle.dryTimer = 0;\r\n                }\r\n                particle.dryTimer++;\r\n                let resist = 1 - Math.max(0, particle.dryTimer - 100) / 400;\r\n                particle.vel.x *= resist;\r\n                particle.vel.y *= resist;\r\n                if (particle.dryTimer > 500) {\r\n                    particle.deleteFlag = true;\r\n                    let baseX = Math.floor(particle.pos.x/grid.tileSize);\r\n                    let baseY = Math.floor(particle.pos.y/grid.tileSize);\r\n                    for (let x = -3; x <= 3; x++) {\r\n                        for (let y = -3; y <= 3; y++) {\r\n                            let d = x*x + y*y;\r\n                            if (d < 4) {\r\n                                grid.setBlockValue(x+baseX, y+baseY, 3);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            let dx = particle.pos.x - 300*4;\r\n            let dy = particle.pos.y - 300*4;\r\n            let dist = Math.sqrt(dx*dx + dy*dy);\r\n            dx /= dist;\r\n            dy /= dist;\r\n            particle.force.x = -dx*.01;\r\n            particle.force.y = -dy*.01;\r\n            this.collideGrid(grid, particle, entityManager);\r\n\r\n            let cellX = Math.min(gridsW-1, Math.max(0, Math.floor(particle.pos.x / cellSize)));\r\n            let cellY = Math.min(gridsH-1, Math.max(0, Math.floor(particle.pos.y / cellSize)));\r\n            if (isNaN(cellX) || isNaN(cellY)) {\r\n                particle.deleteFlag = true;\r\n                continue;\r\n            }\r\n            grids[cellX + cellY*gridsW].push(particle);\r\n        }\r\n\r\n        const calcGrid = (g1, g2) => {\r\n            if (g1.length === 0 || g2.length === 0) {\r\n                return;\r\n            }\r\n            for (let i = 0; i < g1.length; i++) {\r\n                let particle1 = g1[i];\r\n                for (let j = (g1 === g2 ? i + 1 : 0); j < g2.length; j++) {\r\n                    let particle2 = g2[j];\r\n                    let dx = particle2.pos.x - particle1.pos.x;\r\n                    let dy = particle2.pos.y - particle1.pos.y;\r\n                    let dist = Math.sqrt(dx*dx + dy*dy);\r\n                    if (dist < radius) {\r\n                        if (particle1.type === 1 && particle2.type === 0) {\r\n                            particle1.type = 2;\r\n                            particle2.deleteFlag = true;\r\n                        }\r\n                        if (particle2.type === 1 && particle1.type === 0) {\r\n                            particle1.deleteFlag = true;\r\n                            particle2.type = 2;\r\n                        }\r\n                        let q = 1 - dist / radius;\r\n                        let qsq = q*q;\r\n                        particle1.density += qsq;\r\n                        particle1.densityNear += q*qsq;\r\n                        particle2.density += qsq;\r\n                        particle2.densityNear += q*qsq;\r\n                        particle1.neighbors.push(new Neighbor(particle2, dx, dy, dist, q));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let gw = 0; gw < gridsW; gw++) {\r\n            for (let gh = 0; gh < gridsH; gh++) {\r\n                let cur = grids[gw + gh*gridsW];\r\n                let rightEdge = gw === gridsW-1;\r\n                let lowEdge = gh === gridsH-1;\r\n                if (!rightEdge) {\r\n                    calcGrid(cur, grids[gw+1+gh*gridsW]);\r\n                    if (!lowEdge) {\r\n                        calcGrid(cur, grids[gw+1+(gh+1)*gridsW]);\r\n                        calcGrid(cur, grids[gw+(gh+1)*gridsW]);\r\n                        calcGrid(grids[gw+1+gh*gridsW], grids[gw+(gh+1)*gridsW]);\r\n                    }\r\n                } else if (!lowEdge) {\r\n                    calcGrid(cur, grids[gw+(gh+1)*gridsW]);\r\n                }\r\n                calcGrid(cur,cur);\r\n            }\r\n        }\r\n        \r\n        /*\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            let particle1 = this.particles[i];\r\n            for (let j = i+1; j < this.particles.length; j++) {\r\n                let particle2 = this.particles[j];\r\n                let dx = particle2.pos.x - particle1.pos.x;\r\n                let dy = particle2.pos.y - particle1.pos.y;\r\n                let dist = Math.sqrt(dx*dx + dy*dy);\r\n                if (dist < radius) {\r\n                    let q = 1 - dist / radius;\r\n                    let qsq = q*q;\r\n                    particle1.density += qsq;\r\n                    particle1.densityNear += q*qsq;\r\n                    particle2.density += qsq;\r\n                    particle2.densityNear += q*qsq;\r\n                    particle1.neighbors.push(new Neighbor(particle2, dx, dy, dist, q));\r\n                }\r\n            }\r\n        }\r\n        */\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            let particle = this.particles[i];\r\n            particle.pressure = k*(particle.density - restDensity);\r\n            particle.pressureNear = kNear*particle.densityNear;\r\n        }\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            let particle1 = this.particles[i];\r\n            for (let j = 0; j < particle1.neighbors.length; j++) {\r\n                let neighbor = particle1.neighbors[j];\r\n                let particle2 = neighbor.particle;\r\n                let dm = neighbor.q*(particle1.pressure + particle2.pressure + (particle1.pressureNear + particle2.pressureNear)*neighbor.q);\r\n\r\n                let viscX = (particle2.vel.x - particle1.vel.x) * neighbor.q * visc;\r\n                let viscY = (particle2.vel.y - particle1.vel.y) * neighbor.q * visc;\r\n\r\n                let forceX = dm * neighbor.dx / neighbor.dist - viscX;\r\n                let forceY = dm * neighbor.dy / neighbor.dist - viscY;\r\n\r\n                let p1m = 2 * particle1.mass / (particle2.mass + particle1.mass)\r\n                let p2m = 2 * particle2.mass / (particle2.mass + particle1.mass)\r\n                particle1.force.x -= forceX*p2m;\r\n                particle1.force.y -= forceY*p2m;\r\n                particle2.force.x += forceX*p1m;\r\n                particle2.force.y += forceY*p1m;\r\n            }\r\n        }\r\n    }\r\n\r\n    collideGrid(grid, particle, entityManager) {\r\n        let tileSize = grid.tileSize;\r\n        let radius = 10;\r\n        if (particle.type === 2) {\r\n            radius = 7;\r\n        }\r\n        let gx = Math.floor(particle.pos.x / tileSize);\r\n        let gy = Math.floor(particle.pos.y / tileSize);\r\n        if (grid.getBlockValue(gx, gy) > 1) {\r\n            particle.vel.x = 0;\r\n            particle.vel.y = 0;\r\n            particle.force.x = 0;\r\n            particle.force.y = 0;\r\n            particle.deleteFlag = true;\r\n            return;\r\n        }\r\n        let blockRadius = Math.ceil(radius / tileSize); \r\n         for (let x = -blockRadius; x <= blockRadius; x++) {\r\n            for (let y = -blockRadius; y <= blockRadius; y++) {\r\n                let rX = x+gx;\r\n                let rY = y+gy;\r\n                if (grid.boundsCheck(rX, rY)) {\r\n                    let blockVal = grid.tiles[rX + rY*grid.width];\r\n                    if (blockVal > 1) {\r\n                        if (blockVal === 5 && Math.abs(x) + Math.abs(y) <= 1) {\r\n                            if (particle.type === 0) {\r\n                                particle.deleteFlag = true;\r\n                                grid.setBlockValue(gx, gy, 5);\r\n                                return;\r\n                            }\r\n                        }\r\n                        if (blockVal === 5 && particle.type === 0) {\r\n                            continue;\r\n                        }\r\n                        let coordX = (rX+.5)*tileSize;\r\n                        let coordY = (rY+.5)*tileSize;\r\n                        let diffX = coordX - particle.pos.x;\r\n                        let diffY = coordY - particle.pos.y;\r\n                        let dist = Math.sqrt(diffX*diffX + diffY*diffY);\r\n                        if (dist < radius) {\r\n                            if (particle.type === 1 && blockVal === 5) {\r\n                                grid.setBlockValue(rX, rY, 6);\r\n                                entityManager.entities.push(new Fire(rX, rY));\r\n                            }\r\n                            let nx = diffX / dist;\r\n                            let ny = diffY / dist;\r\n                            let radDiff = radius - dist;\r\n                            particle.pos.x -= radDiff * nx;\r\n                            particle.pos.y -= radDiff * ny;\r\n                            particle.vel.x -= nx*.1;\r\n                            particle.vel.y -= ny*.1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render(ctx) {\r\n        for (let p of this.particles) {\r\n            let col = 'rgba(50,100,255,.5)';\r\n            if (p.type === 1) {\r\n                col = 'rgba(255,125,0,1)';\r\n            }\r\n            if (p.type === 2) {\r\n                col = 'rgba(200,200,200,1)';\r\n            }\r\n            if (col !== ctx.fillStyle) {\r\n                ctx.fillStyle = col;\r\n            }\r\n            ctx.fillRect(p.pos.x-5, p.pos.y-5, 10, 10);\r\n        }\r\n    }\r\n}\r\n\r\nclass Neighbor {\r\n    constructor(particle, dx, dy, dist, q) {\r\n        this.particle = particle;\r\n        this.dx = dx;\r\n        this.dy = dy;\r\n        this.dist = dist;\r\n        this.q = q;\r\n    }\r\n}\r\n\r\nexport class FluidParticle {\r\n    constructor(x, y, type) {\r\n        this.mass = type === 1 ? 3 : 1;\r\n        this.type = type;\r\n        this.pos = {x,y};\r\n        this.vel = {x:0, y:0};\r\n        this.pressure = 0;\r\n        this.pressureNear = 0;\r\n        this.force = {x:0, y:0};\r\n        this.density = 0;\r\n        this.densityNear = 0;\r\n        this.neighbors = [];\r\n    }\r\n}","export class Particle {\r\n    // color is of the form \"r,g,b\"\r\n    // startFade is how many seconds left in the animation before alpha fade\r\n    constructor(pos, vel, color, life, startFade) {\r\n        this.pos = pos;\r\n        this.vel = vel;\r\n        this.life = life;\r\n        this.color = color;\r\n        this.startFade = startFade;\r\n    }\r\n\r\n    update(mgr, grid, dt) {\r\n        this.pos.x += this.vel.x*dt;\r\n        this.pos.y += this.vel.y*dt;\r\n        this.life -= dt;\r\n        if (this.life < 0) {\r\n            this.deleteFlag = true;\r\n        }\r\n    }\r\n\r\n    render(ctx) {\r\n        let alpha = this.life > this.startFade ? 1 : this.life/this.startFade;\r\n        ctx.fillStyle = \"rgba(\"+this.color+\",\"+alpha+\")\";\r\n        ctx.translate(this.pos.x, this.pos.y);\r\n        ctx.fillRect(-2, -2, 4, 4);\r\n        ctx.translate(-this.pos.x, -this.pos.y);\r\n    }\r\n}","import { FluidParticle } from \"./fluidmanager\";\r\n\r\n//Worm that digs through the map, spawns randomly when you dig too much\r\nexport class Digger {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.angle = Math.random() * Math.PI * 2;\r\n        this.turn = (Math.random() - .5) * .03;\r\n        this.history = [];\r\n        this.straightTimer = 4;\r\n        this.type = \"digger\";\r\n        this.health = 100;\r\n    }\r\n\r\n    explode(mgr) {\r\n        this.deleteFlag = true;\r\n        for (let i = 0; i < this.history.length; i++) {\r\n            mgr.fluid.particles.push(new FluidParticle(this.history[i].x + Math.random()*10-5, this.history[i].y+Math.random()*10-5, 1));\r\n        }\r\n    }\r\n\r\n    update(mgr, grid, dt) {\r\n        this.history.unshift({x:this.x, y:this.y});\r\n        if (this.history.length > 40) {\r\n            this.history.pop();\r\n        }\r\n        this.x += Math.sin(this.angle)*3;\r\n        this.y += Math.cos(this.angle)*3;\r\n        this.angle += this.turn;\r\n        this.straightTimer -= dt;\r\n        if (this.straightTimer < 0) {\r\n            this.turn = 0;\r\n            if (this.x < 0 || this.y < 0 || this.x > grid.width*grid.tileSize || this.y > grid.height*grid.tileSize) {\r\n                this.deleteFlag = true;\r\n            }\r\n        }\r\n        let bx = grid.worldToGrid(this.x);\r\n        let by = grid.worldToGrid(this.y);\r\n        for (let x = -5; x <= 5; x++) {\r\n            for (let y = -5; y <= 5; y++) {\r\n                if (x*x + y*y < 10) {\r\n                    let blockValue = grid.getBlockValue(x+bx, y+by);\r\n                    if (blockValue > 1) {\r\n                        grid.setBlockValue(x+bx, y+by, 1);\r\n                    }\r\n                    if (blockValue == 5) {\r\n                        this.explode(mgr);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let ent of mgr.entities) {\r\n            if (ent.type === 'bullet') {\r\n                for (let i = this.history.length-1; i >= 0; i--) {\r\n                    if (i%5 !== 0) {\r\n                        continue;\r\n                    }\r\n                    let dx = ent.pos.x - this.history[i].x;\r\n                    let dy = ent.pos.y - this.history[i].y;\r\n                    let dist = Math.sqrt(dx*dx + dy*dy);\r\n                    if (dist <= 10) {\r\n                        ent.hit = true;\r\n                        this.health -= 20;\r\n                        this.flash = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.health < 0) {\r\n            this.explode(mgr);\r\n        }\r\n    }\r\n\r\n    render(ctx) {\r\n        if (this.flash) {\r\n            ctx.fillStyle = '#ff7070';\r\n            this.flash = false;\r\n        } else {\r\n            ctx.fillStyle = '#707070';\r\n        }\r\n        ctx.strokeStyle = '#222222';\r\n        for (let i = this.history.length-1; i >= 0; i--) {\r\n            if (i % 5 !== 0) {\r\n                continue;\r\n            }\r\n            let node = this.history[i];\r\n            ctx.beginPath();\r\n            ctx.arc(node.x, node.y, 10, 0, 2 * Math.PI, false);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}","import { Particle } from \"./particle\";\r\nlet cnt = 0;\r\nexport class Eater {\r\n    constructor(x, y) {\r\n        this.type = \"eater\";\r\n        this.x = x;\r\n        this.y = y;\r\n        this.dir = Math.random() > .5 ? 1 : -1;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.radius = 12;\r\n        this.health = 100;\r\n        this.jumpTime = Math.random()*3 + 2;\r\n        this.diffTime = 0;\r\n        this.oldX = 0;\r\n        this.oldY = 0;\r\n        this.eating = false;\r\n        this.totalEaten = 0;\r\n        this.cnt = cnt++;\r\n    }\r\n\r\n    update(manager, grid, dt) {\r\n        this.angle = Math.atan2(this.y - grid.height*grid.tileSize/2, this.x - grid.width*grid.tileSize/2)\r\n        dt = Math.max(dt, 1.5/60);\r\n        //console.log(this.cnt, this.x, this.y);\r\n        if (!this.eating) {\r\n            this.diffTime-=dt;\r\n            if (this.diffTime < 0) {\r\n                if (Math.abs(this.x-this.oldX) + Math.abs(this.y-this.oldY) < 10) {\r\n                    this.dir = -this.dir;\r\n                }\r\n                this.diffTime = 3.3;\r\n                this.oldX = this.x;\r\n                this.oldY = this.y;\r\n            }\r\n            \r\n            this.vy -= 200*dt*Math.sin(this.angle);\r\n            this.vx -= 200*dt*Math.cos(this.angle);\r\n\r\n            if (this.jumpTime < 0) {\r\n                this.jumpTime += 3 + Math.random()*.1;\r\n                this.vy += 300*Math.sin(this.angle);\r\n                this.vx += 300*Math.cos(this.angle);\r\n            }\r\n\r\n            let sx = 80*dt*Math.sin(this.angle);\r\n            let sy = -80*dt*Math.cos(this.angle);\r\n            this.vx += sx*this.dir;\r\n            this.vy += sy*this.dir;\r\n\r\n            this.jumpTime -= dt;\r\n        }\r\n\r\n        this.x += this.vx*dt;\r\n        this.y += this.vy*dt;\r\n\r\n        this.vx *= .99;\r\n        this.vy *= .99;\r\n\r\n        if (this.eating) {\r\n            this.vx *= .5;\r\n            this.vy *= .5;\r\n        }\r\n\r\n        this.collideClosestGrid(grid, manager);\r\n\r\n        for (let p of manager.fluid.particles) {\r\n            let dx = p.pos.x - this.x;\r\n            let dy = p.pos.y - this.y;\r\n            let dist = Math.sqrt(dx*dx + dy*dy);\r\n\r\n            if (dist < this.radius) {\r\n                if (p.type === 1) {\r\n                    this.health -= 1;\r\n                }\r\n                //this is glitchy for some reason on startup\r\n                this.vx = this.vx * .99 + p.vel.x*60*.01;\r\n                this.vy = this.vy * .99 + p.vel.y*60*.01;\r\n                p.vel.x = p.vel.x * .95 + this.vx/60*.05;\r\n                p.vel.y = p.vel.y * .95 + this.vy/60*.05;\r\n            }\r\n        }\r\n\r\n        for (let ent of manager.entities) {\r\n            if (ent.type === 'bullet') {\r\n                let dx = ent.pos.x - this.x;\r\n                let dy = ent.pos.y - this.y;\r\n                let dist = Math.sqrt(dx*dx + dy*dy);\r\n                if (dist <= this.radius) {\r\n                    ent.hit = true;\r\n                    this.health -= 35;\r\n                    this.flash = true;\r\n                }\r\n            }\r\n            if (ent.type === 'eater' && ent !== this) {\r\n                let dx = ent.x - this.x;\r\n                let dy = ent.y - this.y;\r\n                let dist = Math.sqrt(dx*dx + dy*dy);\r\n                if (dist <= this.radius*2) {\r\n                    let nx = dx/dist;\r\n                    let ny = dy/dist;\r\n                    let diffD = this.radius*2 - dist;\r\n                    this.vx -= nx;\r\n                    this.vy -= ny;\r\n                    ent.vx += nx;\r\n                    ent.vy += ny;\r\n                }\r\n            }\r\n        }\r\n        if (this.health <= 0) {\r\n            this.deleteFlag = true;\r\n        }\r\n    }\r\n\r\n    collideClosestGrid(grid, mgr) {\r\n        let tileSize = grid.tileSize;\r\n        let gx = Math.floor(this.x / tileSize);\r\n        let gy = Math.floor(this.y / tileSize);\r\n        let blockRadius = Math.ceil(this.radius / tileSize)+4; \r\n        let radius = 12;\r\n        let wasEating = this.eating;\r\n        this.eating = false;\r\n        for (let x = -blockRadius; x <= blockRadius; x++) {\r\n            for (let y = -blockRadius; y <= blockRadius; y++) {\r\n                let rX = x+gx;\r\n                let rY = y+gy;\r\n                if (grid.boundsCheck(rX, rY)) {\r\n                    let tile = grid.tiles[rX + rY*grid.width];\r\n                    if (tile > 1) {\r\n                        let coordX = (rX+.5)*tileSize;\r\n                        let coordY = (rY+.5)*tileSize;\r\n                        let diffX = coordX - this.x;\r\n                        let diffY = coordY - this.y;\r\n                        let dist = Math.sqrt(diffX*diffX + diffY*diffY);\r\n                        if (dist < radius) {\r\n                            let nx = diffX/dist;\r\n                            let ny = diffY/dist;\r\n                            this.x -= nx*(radius-dist);\r\n                            this.y -= ny*(radius-dist);\r\n                            this.vx -= nx*.2;\r\n                            this.vy -= ny*.2;\r\n                            this.vy *= .9;\r\n                            this.vx *= .9\r\n                        }\r\n                        if (tile === 5 && dist < radius+4) {\r\n                            this.eating = true;\r\n                            if (dist < radius) {\r\n                                grid.setBlockValue(rX, rY, 1);\r\n                                this.totalEaten++;\r\n                            }\r\n                            this.vx += 20*diffX/dist;\r\n                            this.vy += 20*diffY/dist;\r\n                        }\r\n                        if (dist < radius && wasEating) {\r\n                            grid.setBlockValue(rX, rY, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.totalEaten > 100) {\r\n            mgr.addEntity(new Eater(this.x+1, this.y));\r\n            this.totalEaten = 0;\r\n        }\r\n        if (this.eating && Math.abs(this.vx) + Math.abs(this.vy) < 10) {\r\n            this.vx += 20;\r\n        }\r\n    }\r\n\r\n    render(ctx) {\r\n        if (this.flash) {\r\n            ctx.fillStyle = '#ff0000';\r\n            this.flash = false;\r\n        } else {\r\n            ctx.fillStyle = '#009900';\r\n        }\r\n        ctx.lineWidth = 2;\r\n        ctx.translate(this.x, this.y);\r\n        let extraAngle = !this.eating ? 0 : Math.atan2(this.vy, this.vx);\r\n        let negArc = this.eating ? Math.PI/6 : 0;\r\n        ctx.rotate(this.angle + extraAngle);\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(0,0,10, negArc+Math.PI/2, 2 * Math.PI-negArc + Math.PI/2, false);\r\n        if (this.eating) {\r\n            ctx.lineTo(0,0);\r\n            ctx.closePath();\r\n        }\r\n        ctx.fill();\r\n        if (!this.eating) {\r\n            ctx.strokeStyle = '#333333';\r\n            ctx.stroke();\r\n            ctx.beginPath();\r\n            ctx.moveTo(0,0);\r\n            if (this.dir === -1 || this.eating) {\r\n                ctx.lineTo(0,10);\r\n            } else {\r\n                ctx.lineTo(0,-10);\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n        //ctx.fillRect(-10, -10, 20, 20);\r\n\r\n        ctx.rotate(-this.angle-extraAngle);\r\n        ctx.translate(-this.x, -this.y)\r\n    }\r\n}\r\n","import { Particle } from \"./particle\";\r\nimport { Digger } from \"./digger\";\r\nimport { Eater } from \"./eater\";\r\n\r\nexport class Bullet {\r\n    constructor(pos, vel) {\r\n        this.pos = pos;\r\n        this.vel = vel;\r\n        this.type = \"bullet\";\r\n    }\r\n\r\n    update(mgr, grid, dt) {\r\n        if (this.pos.x < 0 || this.pos.y < 0 || this.pos.x > grid.width*grid.tileSize || this.pos.y > grid.height*grid.tileSize) {\r\n            this.deleteFlag = true;\r\n            return;\r\n        }\r\n        const subStep = 5;\r\n        for (let s = 0; s < subStep; s++) {\r\n            this.pos.x += this.vel.x*dt/subStep;\r\n            this.pos.y += this.vel.y*dt/subStep;\r\n\r\n            if (grid.getBlockValue(grid.worldToGrid(this.pos.x), grid.worldToGrid(this.pos.y)) > 1 || this.hit) {\r\n                this.deleteFlag = true;\r\n                let randVel = () => {\r\n                    return Math.random() * 2 - 1;\r\n                }\r\n                for (let i = 0; i < 5; i++) {\r\n                    mgr.addEntity(new Particle({x: this.pos.x, y: this.pos.y}, {x: randVel()*300, y : randVel()*300}, '255,255,255', .1, .1));\r\n                }\r\n                if (Math.random() > .98 && !this.hit) {\r\n                    if (Math.random() > .5) {\r\n                        if (mgr.levelConfig.diggers) {\r\n                            mgr.addEntity(new Digger(this.pos.x, this.pos.y));\r\n                        }\r\n                    } else {\r\n                        if (mgr.levelConfig.eaters) {\r\n                            mgr.addEntity(new Eater(this.pos.x, this.pos.y));\r\n                        }\r\n                    }\r\n                }\r\n                let bx = Math.floor(this.pos.x/grid.tileSize);\r\n                let by = Math.floor(this.pos.y/grid.tileSize);\r\n                for (let x = -7; x <= 7; x++) {\r\n                    for (let y = -7; y < 7; y++) {\r\n                        if (x*x + y*y < 36) {\r\n                            if (grid.getBlockValue(x+bx, y+by) > 1) {\r\n                                grid.setBlockValue(x+bx, y+by, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render(ctx) {\r\n        ctx.fillStyle = '#ffff00';\r\n        ctx.translate(this.pos.x, this.pos.y);\r\n        ctx.fillRect(-2, -2, 4, 4);\r\n        ctx.translate(-this.pos.x, -this.pos.y);\r\n    }\r\n}","import { Mouse } from \"./mouse\";\r\nimport { Key } from \"./key\";\r\nimport { Bullet } from \"./bullet\";\r\nimport { Particle } from \"./particle\";\r\n\r\nexport class Player {\r\n    constructor(x, y) {\r\n        this.type = \"player\";\r\n        this.x = x;\r\n        this.y = y;\r\n        this.angle = 0;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.maxVel = 500000;\r\n        this.radius = 12;\r\n        this.health = 100;\r\n        this.shootCooldown = 0;\r\n        this.hit = false;\r\n    }\r\n\r\n    update(manager, grid, dt) {\r\n        let mdx = Mouse.x - Mouse.width/2;\r\n        let mdy = Mouse.y - Mouse.height/2;\r\n        let camAngle = manager.cam.angle;\r\n\r\n        if (this.x < 0) {\r\n            this.x = 0;\r\n            this.vx = 0;\r\n        }\r\n        if (this.y < 0) {\r\n            this.y = 0;\r\n            this.vy = 0;\r\n        }\r\n        if (this.x > grid.width*grid.tileSize) {\r\n            this.x = grid.width*grid.tileSize;\r\n            this.vx = 0;\r\n        }\r\n        if (this.y > grid.height*grid.tileSize) {\r\n            this.y = grid.height*grid.tileSize;\r\n            this.vy = 0;\r\n        }\r\n\r\n\r\n        this.angle = Math.atan2(mdy, mdx) + camAngle;\r\n        dt = Math.max(dt, 1.5/60);\r\n\r\n        if (Key.isDown(Key.A) || Key.isDown(Key.LEFT)) {\r\n            this.vx -= 500*dt*Math.cos(camAngle);\r\n            this.vy -= 500*dt*Math.sin(camAngle);\r\n        }\r\n        if (Key.isDown(Key.D) || Key.isDown(Key.RIGHT)) {\r\n            this.vx += 500*dt*Math.cos(camAngle);\r\n            this.vy += 500*dt*Math.sin(camAngle);\r\n        }\r\n        if (Key.isDown(Key.W) || Key.isDown(Key.UP)) {\r\n            this.vy -= 500*dt*Math.cos(camAngle);\r\n            this.vx += 500*dt*Math.sin(camAngle);\r\n        }\r\n        if (Key.isDown(Key.S) || Key.isDown(Key.DOWN)) {\r\n            this.vy += 500*dt*Math.cos(camAngle);\r\n            this.vx -= 500*dt*Math.sin(camAngle);\r\n        }\r\n\r\n        this.x += this.vx*dt;\r\n        this.y += this.vy*dt;\r\n\r\n        this.vx *= .9;\r\n        this.vy *= .9;\r\n\r\n        this.collideClosestGrid(grid);\r\n\r\n        this.shootCooldown -= dt;\r\n\r\n        if (Mouse.leftDown && this.shootCooldown < 0) {\r\n            this.shootCooldown = .2;\r\n            manager.addEntity(new Bullet({x: this.x, y: this.y}, {x: Math.cos(this.angle)*500, y: Math.sin(this.angle)*500}));\r\n        }\r\n\r\n        this.hit = false;\r\n        for (let p of manager.fluid.particles) {\r\n            let dx = p.pos.x - this.x;\r\n            let dy = p.pos.y - this.y;\r\n            let dist = Math.sqrt(dx*dx + dy*dy);\r\n\r\n            if (dist < this.radius) {\r\n                if (p.type === 1) {\r\n                    let randVel = () => {\r\n                        return Math.random() * 2 - 1;\r\n                    }\r\n                    for (let i = 0; i < 1; i++) {\r\n                        manager.addEntity(new Particle({x: this.x, y: this.y}, {x: randVel()*300, y : randVel()*300}, '255,0,0', .2, .2));\r\n                    }\r\n                    this.hit = true;\r\n                    this.health -= .3;\r\n                }\r\n                this.vx = this.vx * .97 + p.vel.x*60*.03;\r\n                this.vy = this.vy * .97 + p.vel.y*60*.03;\r\n                p.vel.x = p.vel.x * .97 + this.vx/60*.03;\r\n                p.vel.y = p.vel.y * .97 + this.vy/60*.03;\r\n            }\r\n        }\r\n    }\r\n\r\n    collideClosestGrid(grid) {\r\n        let tileSize = grid.tileSize;\r\n        let gx = Math.floor(this.x / tileSize);\r\n        let gy = Math.floor(this.y / tileSize);\r\n        let blockRadius = Math.ceil(this.radius / tileSize); \r\n        let radius = 12;\r\n        for (let x = -blockRadius; x <= blockRadius; x++) {\r\n            for (let y = -blockRadius; y <= blockRadius; y++) {\r\n                let rX = x+gx;\r\n                let rY = y+gy;\r\n                if (grid.boundsCheck(rX, rY)) {\r\n                    if (grid.tiles[rX + rY*grid.width] > 1) {\r\n                        let coordX = (rX+.5)*tileSize;\r\n                        let coordY = (rY+.5)*tileSize;\r\n                        let diffX = coordX - this.x;\r\n                        let diffY = coordY - this.y;\r\n                        let dist = Math.sqrt(diffX*diffX + diffY*diffY);\r\n                        if (dist < radius) {\r\n                            let nx = diffX/dist;\r\n                            let ny = diffY/dist;\r\n                            this.x -= nx*(radius-dist);\r\n                            this.y -= ny*(radius-dist);\r\n                            this.vx -= nx*.2;\r\n                            this.vy -= ny*.2;\r\n                            this.vy *= .9;\r\n                            this.vx *= .9\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render(ctx) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.translate(this.x, this.y);\r\n        ctx.rotate(this.angle);\r\n\r\n        var centerX = 0;\r\n        var centerY = 0;\r\n        var shipRadius = 10;\r\n        var cockpitRadius = 4;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, shipRadius, 0, 2 * Math.PI, false);\r\n        ctx.fillStyle = '#BCB9B8';\r\n        ctx.fill();\r\n        ctx.lineWidth = 2;\r\n        ctx.strokeStyle = '#003300';\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY, cockpitRadius, 0, 2 * Math.PI, false);\r\n        ctx.fillStyle = '#2C2C2C';\r\n        ctx.fill();\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#22E403';\r\n        ctx.stroke();\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        ctx.fillRect(9, -2, 2, 2);\r\n        ctx.rotate(-this.angle);\r\n        ctx.translate(-this.x, -this.y)\r\n    }\r\n}\r\n","import { Key } from \"./key\";\r\n\r\nexport class Grid {\r\n    constructor(w, h) {\r\n        this.debugMode = false;\r\n        this.height = h;\r\n        this.width = w;\r\n        this.tileSize = 4;\r\n        this.tiles = null;\r\n        this.colors =          [null, null, \"#765432\", \"#888888\", \"#009900\", \"#bb00bb\", \"#ffff00\", \"#000000\"];\r\n        this.colorsDark = [null, \"#444444\", \"#382716\", \"#333333\", \"#004900\", \"#660066\", \"#ffff00\", \"#000000\"];\r\n        this.chunkWidth = Math.ceil(w/CHUNK_WIDTH);\r\n        this.chunkHeight = Math.ceil(h/CHUNK_WIDTH);\r\n        this.chunks = new Array(this.chunkWidth * this.chunkHeight);\r\n        this.dirtyChunks = new Map();\r\n        this.totalPurple = 0;\r\n    }\r\n\r\n    worldToGrid(x) {\r\n        return Math.floor(x / this.tileSize);\r\n    }\r\n\r\n    getIndex(x, y) {\r\n        return x + this.width * y;\r\n    }\r\n\r\n    getVector2(index) {\r\n        return {\r\n            x: index % this.width,\r\n            y: Math.floor(index / this.width)\r\n        }\r\n    }\r\n\r\n    getChunk(vec) {\r\n        // TODO(nick)\r\n        let x = vec.x / CHUNK_WIDTH;\r\n        let y = vec.y / CHUNK_WIDTH;\r\n        let chunk = this.chunks[x + y];\r\n        return chunk;\r\n    }\r\n\r\n    boundsCheck(x, y) {\r\n        return x >= 0 && y >= 0 && x < this.width && y < this.height;\r\n    }\r\n\r\n    buildChunks() {\r\n        let idx = 0;\r\n        for (let cx = 0; cx < this.chunkWidth; cx++) {\r\n            for (let cy = 0; cy < this.chunkHeight; cy++) {\r\n                let x = cx*CHUNK_WIDTH;\r\n                let y = cy*CHUNK_WIDTH;\r\n                let chunk = new Chunk(idx, x, y);\r\n                chunk.rebuild(this);\r\n                this.chunks[cx + cy*this.chunkWidth] = chunk;\r\n                idx++;\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (Key.isHit(Key.F2)) {\r\n            this.debugMode = !this.debugMode;\r\n            this.buildChunks();\r\n        }\r\n    }\r\n\r\n    getBlockValue(x, y) {\r\n        if (!this.boundsCheck(x, y)) {\r\n            return 0;\r\n        }\r\n        return this.tiles[x + y*this.width];\r\n    }\r\n\r\n    setBlockValue(x, y, value) {\r\n        if (!this.boundsCheck(x, y)) {\r\n            return 0;\r\n        }\r\n        let idx = x + y * this.width;\r\n        let oldValue = this.tiles[idx];\r\n        if (oldValue !== value) {\r\n            if (oldValue === 5) {\r\n                this.totalPurple--;\r\n            }\r\n            if (value === 5) {\r\n                this.totalPurple++;\r\n            }\r\n            this.tiles[x + y*this.width] = value;\r\n            let chunkX = Math.floor(x / CHUNK_WIDTH);\r\n            let chunkY = Math.floor(y / CHUNK_WIDTH);\r\n            let chunk = this.chunks[chunkX + chunkY*this.chunkWidth];\r\n            if (!chunk) {\r\n                return;\r\n            }\r\n            chunk.dirty = true;\r\n            this.dirtyChunks.set(chunkX + ',' + chunkY, chunk);\r\n        }\r\n\r\n    }\r\n\r\n    rebuildDirty() {\r\n        let fixed = [];\r\n        for (let chunk of this.dirtyChunks.values()) {\r\n            fixed.push(chunk);\r\n            if (!chunk.dirty) {\r\n                continue;\r\n            }\r\n            chunk.rebuild(this);\r\n            break;\r\n        }\r\n        fixed.forEach(c => this.dirtyChunks.delete(Math.floor(c.x/CHUNK_WIDTH) + ',' + Math.floor(c.y/CHUNK_WIDTH)));\r\n    }\r\n\r\n    /*\r\n    DONT USE, THIS IS SLOW\r\n    render(ctx, offsX, offsY, sizeX, sizeY) {\r\n        offsX = Math.floor(offsX);\r\n        offsY = Math.floor(offsY);\r\n        sizeX++;\r\n        sizeY++;\r\n        for (let x = 0; x < sizeX; x++) {\r\n            for (let y = 0; y < sizeY; y++) {\r\n                let rX = x + offsX;\r\n                let rY = y + offsY;\r\n                if (this.boundsCheck(rX, rY)) {\r\n                    let value = this.tiles[this.getIndex(rX, rY)];\r\n                    let color = this.colors[value];\r\n                    if (color) {\r\n                        if (color !== ctx.fillStyle) {\r\n                            ctx.fillStyle = color;\r\n                        }\r\n                        ctx.fillRect(rX*this.tileSize, rY*this.tileSize, this.tileSize, this.tileSize);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }*/\r\n\r\n    //renderChunks(ctx, camVec, sizeX, sizeY, zoom) {\r\n    renderChunks(ctx) {\r\n        // TODO(nick): select chunk(s) to render\r\n        for (let x = 0; x < this.chunkWidth; x++) {\r\n            for (let y = 0; y  < this.chunkHeight; y++) {\r\n                let chunk = this.chunks[x + y*this.chunkWidth];\r\n                if (!chunk.image) {\r\n                    //console.log(\"chunk not found x:\" + x + \" y: \" + y);\r\n                    continue;\r\n                }\r\n                let imageX = x * CHUNK_WIDTH * this.tileSize;\r\n                let imageY = y * CHUNK_WIDTH * this.tileSize;\r\n                ctx.drawImage(chunk.image, imageX, imageY);\r\n            }\r\n        }\r\n        //TODO only render on screen chunks\r\n        //let lowChunkX = Math.floor(offsX / CHUNK_WIDTH);\r\n        //let lowChunkY = Math.floor(offsY / CHUNK_WIDTH);\r\n    }\r\n}\r\n\r\nconst CHUNK_WIDTH = 64;\r\nclass Chunk {\r\n    constructor(idx, x, y) {\r\n        this.idx = idx;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.image = null;\r\n        this.dirty = false;\r\n        this.visited = false;\r\n    }\r\n\r\n    rebuild(grid) {\r\n        // TODO(nick): debug visualization\r\n        let padding = 0;\r\n        if (grid.debugMode) {\r\n            padding = 1;\r\n        }\r\n        let canv = document.createElement('canvas');\r\n        canv.width = CHUNK_WIDTH*grid.tileSize+1;\r\n        canv.height = CHUNK_WIDTH*grid.tileSize+1;\r\n        let ctx = canv.getContext('2d');\r\n        \r\n        let extraPx = 0;\r\n        for (let x = 0; x < CHUNK_WIDTH; x++) {\r\n            for (let y = 0; y < CHUNK_WIDTH; y++) {\r\n                if (x === CHUNK_WIDTH-1 || y === CHUNK_WIDTH -1) {\r\n                    extraPx = 1;\r\n                } else {\r\n                    extraPx = 0;\r\n                }\r\n                let rX = x + this.x - 1;\r\n                let rY = y + this.y - 1;\r\n                if (rX < 0 || rY < 0 || rX > grid.width-1 || rY > grid.height-1) {\r\n                    continue;\r\n                }\r\n                let value = grid.tiles[rX + rY * grid.width];\r\n                let color = grid.colorsDark[value];\r\n                if (color) {\r\n                    if (color !== ctx.fillStyle) {\r\n                        ctx.fillStyle = color;\r\n                    }\r\n                    ctx.fillRect(x*grid.tileSize, y*grid.tileSize, grid.tileSize-padding+extraPx, grid.tileSize-padding+extraPx);\r\n                }\r\n            }\r\n        }\r\n        \r\n        for (let x = 0; x < CHUNK_WIDTH; x++) {\r\n            for (let y = 0; y < CHUNK_WIDTH; y++) {\r\n                if (x === CHUNK_WIDTH-1 || y === CHUNK_WIDTH -1) {\r\n                    extraPx = 1;\r\n                } else {\r\n                    extraPx = 0;\r\n                }\r\n                let rX = x + this.x;\r\n                let rY = y + this.y;\r\n                if (rX < 0 || rY < 0 || rX > grid.width-1 || rY > grid.height-1) {\r\n                    continue;\r\n                }\r\n                let value = grid.tiles[rX + rY * grid.width];\r\n                let color = grid.colors[value];\r\n                if (color) {\r\n                    if (color !== ctx.fillStyle) {\r\n                        ctx.fillStyle = color;\r\n                    }\r\n                    ctx.fillRect(x*grid.tileSize, y*grid.tileSize, grid.tileSize-padding+extraPx, grid.tileSize-padding+extraPx);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (grid.debugMode) {\r\n            ctx.strokeStyle = \"rgba(255, 0, 0, 0.3)\";\r\n            ctx.lineWidth = 5;\r\n            ctx.strokeRect(0, 0, canv.width - padding, canv.height - padding);\r\n            let t = \"chunk #: \" + this.idx;\r\n            ctx.font = '24px serif';\r\n            ctx.fillStyle = \"rgba(0, 255, 0, 0.3)\";\r\n            let text = ctx.measureText(t)\r\n            let x = Math.floor((canv.width / 2) - (text.width / 2));\r\n            let y = Math.floor(canv.height - 10);\r\n            ctx.fillText(t, x, y);\r\n        }\r\n\r\n        let newImage = new Image();\r\n        newImage.onload = () => {\r\n            this.image = newImage;\r\n        }\r\n        newImage.src = canv.toDataURL('image/png');\r\n    }\r\n}","// Entity methods:\r\n// update(entityManager, grid, dt)\r\n// render(context)\r\n// init(entityManager) (optional)\r\n// beforeDelete(entityManager) (optional)\r\n\r\n// Entity Fields:\r\n// deleteFlag = false // set to true to delete next update\r\n// type = string type of entity\r\n\r\nexport class EntityManager {\r\n    constructor(fluidManager, cam) {\r\n        this.entities = [];\r\n        this.fluid = fluidManager;\r\n        this.cam = cam;\r\n    }\r\n\r\n    resetEntities() {\r\n        this.entities.length = 0;\r\n    }\r\n\r\n    addEntity(e) {\r\n        this.entities.push(e);\r\n        e.init && e.init(this);\r\n    }\r\n\r\n    update(grid, dt) {\r\n        for (let i = 0; i < this.entities.length; i++) {\r\n            this.entities[i].update(this, grid, dt);\r\n        }\r\n\r\n        for (let i = 0; i < this.entities.length; i++) {\r\n            let e = this.entities[i];\r\n            if (e.deleteFlag) {\r\n                e.beforeDelete && e.beforeDelete(this);\r\n                this.entities.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n\r\n    render(ctx) {\r\n        this.entities.forEach(e => {\r\n            e.render(ctx);\r\n        });\r\n    }\r\n}","import Simplex from 'simplex-noise';\r\n\r\n// width - grid width and height (blocks)\r\n// seed - generate same world with the same seed\r\n// radius - planet radius (blocks)\r\n// surfaceVariance - number of blocks the surface radius varies by\r\n// interiorFill - (0 to 1) percentage of interior of the planet that is filled\r\n// coreRadius - radius of planet core\r\n// lavaMode - 0 - no lava, 1 - little lava, 2 - lots of lava\r\nexport function generatePlanet(width, seed, radius, surfaceVariance, interiorFill, coreRadius, lavaMode) {\r\n    let surfaceSimplex = new Simplex(seed);\r\n    let interiorSimplex = new Simplex(seed + \"a\");\r\n    let interiorSimplex2 = new Simplex(seed + \"b\");\r\n    let lavaSimplex = new Simplex(seed + 'c');\r\n    let arr = new Int8Array(width*width);\r\n    const fillValueThreshold = interiorFill * 2 - 1;\r\n    for (let x = 0; x < width; x++) {\r\n        for (let y = 0; y < width; y++) {\r\n            let dx = x - width/2;\r\n            let dy = y - width/2;\r\n            let selfRad = Math.sqrt(dx*dx + dy*dy);\r\n            if (selfRad < coreRadius) {\r\n                //core of planet\r\n                arr[x + y*width] = 3;\r\n                continue;\r\n            }\r\n            let bumpyRadius = selfRad + surfaceSimplex.noise2D(x/(surfaceVariance*10), y/(surfaceVariance*10))*surfaceVariance;\r\n            if (bumpyRadius < radius) {\r\n                arr[x+y*width] = 1; //interior of the planet\r\n                //this block is interior to the planet\r\n                if (interiorSimplex.noise2D(x/64, y/64) * .66 + interiorSimplex2.noise2D(x/32, y/32) * .34 < fillValueThreshold) {\r\n                    if (bumpyRadius < radius - 5) {\r\n                        arr[x + y*width] = 2;\r\n                    } else {\r\n                        arr[x + y*width] = 4;\r\n                    }\r\n                }\r\n                if (lavaMode === 2) {\r\n                    let lava = lavaSimplex.noise2D(x/64, y/64);\r\n                    if (lava > .6) {\r\n                        arr[x + y*width] = 6; //lava will be replaced by particles\r\n                    } else if (lava > .5) {\r\n                        arr[x + y*width] = 2;\r\n                    }\r\n                }\r\n                if (lavaMode === 1) {\r\n                    let lava = lavaSimplex.noise2D(x/128, y/128);\r\n                    if (lava > .8) {\r\n                        arr[x + y*width] = 6; //lava will be replaced by particles\r\n                    } else if (lava > .7) {\r\n                        arr[x + y*width] = 2;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}","import { generatePlanet } from \"./terrain\";\r\n\r\nexport const level_configs = [\r\n    {\r\n        gen: () => generatePlanet(600, \"test\" + Math.random(), 150, 4, .8, 50, 0),\r\n        outerRadius: 180,\r\n        waterSupply: 2000,\r\n        goal: 500,\r\n        diggers: false,\r\n        eaters: false,\r\n        message: \"LEVEL 1\\n\\nWelcome!\\nHelp us take over these planets with a purple plant. It just needs water to grow!\\nOnce it reaches critical mass, the mission is successful!\"\r\n    },\r\n    {\r\n        gen: () => {\r\n            let grid = generatePlanet(600, \"test\" + Math.random(), 180, 4, .5, 50, 1);\r\n            for (let x = -60; x <= 60; x++) {\r\n                for (let y = -30; y <= 30; y++) {\r\n                    let d = x*x/4 + y*y;\r\n                    if (d < 25*25) {\r\n                        grid[x + 300 + (y + 170)*600] = 6;\r\n                    } else if (d < 29*29) {\r\n                        grid[x + 300 + (y + 170)*600] = 2;\r\n                    }\r\n                }\r\n            }\r\n            return grid;\r\n        },\r\n        outerRadius: 210,\r\n        waterSupply: 3000,\r\n        goal: 2000,\r\n        diggers: false,\r\n        eaters: false,\r\n        message: \"LEVEL 2\\n\\nWatch out for lava on this planet!\\nPlants are flammable!\"\r\n    },\r\n    {\r\n        gen: () => generatePlanet(600, \"test\" + Math.random(), 200, 4, .7, 50, 1),\r\n        outerRadius: 230,\r\n        waterSupply: 3000,\r\n        goal: 3000,\r\n        diggers: false,\r\n        eaters: true,\r\n        eaterCount: 5,\r\n        message: \"LEVEL 3\\n\\nWhoa! This planet appears to have some inhabitants.\\nI wonder if they are friendly?\"\r\n    },\r\n    {\r\n        gen: () => generatePlanet(600, \"test\" + Math.random(), 250, 4, .5, 50, 2),\r\n        outerRadius: 280,\r\n        waterSupply: 4000,\r\n        goal: 8000,\r\n        diggers: true,\r\n        eaters: true,\r\n        eaterCount: 5,\r\n        message: \"LEVEL 4\\n\\nRumor has it this planet also has worms\\nthat may hatch if you disturb them!\"\r\n    },\r\n    {\r\n        gen: () => generatePlanet(600, \"test\" + Math.random(), 270, 4, .5, 50, 2),\r\n        outerRadius: 300,\r\n        waterSupply: 4000,\r\n        goal: 25000,\r\n        diggers: true,\r\n        eaters: true,\r\n        eaterCount: 5,\r\n        message: \"LEVEL 5\\n\\nWe are going to need a lot to reach critical mass here.\"\r\n    },\r\n    {\r\n        gen: () => generatePlanet(600, \"test\" + Math.random(), 100, 4, .8, 50, 0),\r\n        outerRadius: 180,\r\n        waterSupply: 4000,\r\n        goal: 25000,\r\n        diggers: false,\r\n        eaters: false,\r\n        message: \"Thanks For Playing!\"\r\n    },\r\n];\r\n\r\nexport const menu_config = {\r\n    gen: () => generatePlanet(600, \"test\" + Math.random(), 200, 4, .5, 50, 2),\r\n    outerRadius: 230,\r\n    waterSupply: 3000,\r\n    goal: 4000000,\r\n    diggers: false,\r\n    eaters: true,\r\n    eaterCount: 15,\r\n    message: \"\",\r\n    noFail: true,\r\n};","import { Key } from \"./key\";\r\n\r\nexport class Camera {\r\n    constructor(w, h, startVec) {\r\n        this.height = h;\r\n        this.width = w;\r\n        this.zoom = 1.00;\r\n        this.position = {\r\n            x: startVec.x,\r\n            y: startVec.y,\r\n        };\r\n    }\r\n\r\n    update(vec) {\r\n        if (Key.isDown(Key.Z)) {\r\n            this.zoom += 0.01;\r\n        }\r\n        if (Key.isDown(Key.B)) {\r\n            this.zoom -= 0.01;\r\n            if (this.zoom <= 0.1) {\r\n                this.zoom = 0.1;\r\n            }\r\n        }\r\n        this.position.x = vec.x;\r\n        this.position.y = vec.y;\r\n    }\r\n\r\n    getCorner() {\r\n        return {x: this.position.x, y: this.position.y};\r\n    }\r\n}","import { Mouse } from \"./mouse\";\r\n\r\nexport class LevelTransition {\r\n    constructor(message, switchCallback, delay) {\r\n        this.message = message;\r\n        this.switchCallback = switchCallback;\r\n        this.alpha = 0;\r\n        this.fadeIn = true;\r\n        this.wait = 0;\r\n        this.fadeOut = false;\r\n        this.done = false;\r\n        this.delay = delay || 300;\r\n    }\r\n\r\n    render(ctx) {\r\n        if (this.fadeIn) {\r\n            this.alpha += .03;\r\n            if (this.alpha > 1) {\r\n                this.alpha = 1;\r\n                this.fadeIn = false;\r\n                this.wait = this.delay;\r\n            }\r\n        } else if (this.wait > 0) {\r\n            this.wait--;\r\n            if (Mouse.leftDown) {\r\n                this.wait = 0;\r\n            }\r\n            if (this.wait === 0) {\r\n                this.switchCallback();\r\n                this.fadeOut = true;\r\n            }\r\n        } else if (this.fadeOut) {\r\n            this.alpha -= .03;\r\n            if (this.alpha < 0) {\r\n                this.alpha = 0;\r\n                this.done = true;\r\n                this.fadeOut = false;\r\n            }\r\n        }\r\n\r\n        ctx.font = '30px cousine';\r\n        ctx.fillStyle = \"rgba(0,0,0,\"+this.alpha+\")\";\r\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.fillStyle = \"rgba(255,255,255,\"+this.alpha+\")\";\r\n        let lines = this.message.split('\\n');\r\n        for (let i = 0; i < lines.length; i++) {\r\n            let width = ctx.measureText(lines[i]).width;\r\n            let height = 30;\r\n            ctx.fillText(lines[i], (ctx.canvas.width-width)/2, ctx.canvas.height/2 + i*height - lines.length/2*height);\r\n        }\r\n    }\r\n}","import { Key } from \"./key\";\r\nimport { FluidManager, FluidParticle } from \"./fluidmanager\";\r\nimport { Player } from \"./player\";\r\nimport { Grid } from \"./grid\";\r\nimport { EntityManager } from \"./entitymanager\";\r\nimport { level_configs, menu_config } from \"./levels\";\r\nimport { Camera } from \"./camera\";\r\nimport { Eater } from \"./eater\";\r\nimport { LevelTransition } from \"./leveltransition\";\r\n\r\nexport class GameState {\r\n    constructor(screenW, screenH) {\r\n        this.inMainMenu = true;\r\n        this.isPlaying = false;\r\n        this.currentlyDead = false;\r\n        this.deathCount = 0;\r\n        this.levelCount = 0;\r\n        this.grid = null;\r\n        this.player = null;\r\n        this.fluidManager = null;\r\n        this.entityManager = null;\r\n        this.cam = null;\r\n        this.screenH = screenH;\r\n        this.screenW = screenW;\r\n        this.levelTransition = null;\r\n    }\r\n\r\n    start(mainMenu) {\r\n        this.inMainMenu = mainMenu;\r\n        this.grid = new Grid(600, 600);\r\n        this.cam = new Camera(this.screenW, this.screenH, { x: 0, y: 0 });\r\n        this.player = new Player(300*this.grid.tileSize, (300-70)*this.grid.tileSize);\r\n        this.fluidManager = new FluidManager();\r\n        this.entityManager = new EntityManager(this.fluidManager, this.cam);\r\n        this.entityManager.addEntity(this.player); this.grid = new Grid(600, 600);\r\n        let levelConfig = level_configs[this.levelCount];\r\n        if (this.inMainMenu) {\r\n            levelConfig = menu_config;\r\n        }\r\n        this.entityManager.levelConfig = levelConfig;\r\n\r\n        if (levelConfig.eaters) {\r\n            for (let i = 0; i < levelConfig.eaterCount; i++) {\r\n                let a = Math.random() * Math.PI * 2;\r\n                let rad = levelConfig.outerRadius*this.grid.tileSize + 100;\r\n                this.entityManager.addEntity(new Eater(Math.sin(a)*rad+this.grid.width*this.grid.tileSize/2, Math.cos(a)*rad + this.grid.height*this.grid.tileSize/2));\r\n            }\r\n        }\r\n\r\n        this.grid.tiles = levelConfig.gen();\r\n        for (let x = -40; x < 40; x++) {\r\n            for (let y = -40; y < 40; y++) {\r\n                if (x*x + y*y < 20*20) {\r\n                    this.grid.setBlockValue(300+x,300-67+y, 1);\r\n                } else if (x*x + y*y < 23*23) {\r\n                    this.grid.setBlockValue(300+x,300-67+y, 2);\r\n                }\r\n                if (this.grid.getBlockValue(x+300, y+300-67) === 6) {\r\n                    this.grid.setBlockValue(x+300, y+300-67, 1);\r\n                }\r\n            }\r\n        }\r\n        this.processGridForLava();\r\n        this.grid.setBlockValue(300, 300-58, 5);\r\n        for (let i = 0; i < 100; i ++) {\r\n            let d = Math.random() * 15;\r\n            this.grid.setBlockValue(300 + Math.floor(Math.random() * d-d/2), 300-58 +Math.floor(d), 5);\r\n        }\r\n        this.grid.buildChunks();\r\n    }\r\n\r\n    reset() {\r\n        this.currentlyDead = false;\r\n        this.deathCount++;\r\n        this.start(false);\r\n    }\r\n\r\n    update(dt) {\r\n        this.grid.rebuildDirty();\r\n        this.fluidManager.update(this.grid, 1, this.entityManager);\r\n        this.grid.update();\r\n        if (this.player.health < 0 && !this.entityManager.levelConfig.noFail) {\r\n            this.currentlyDead = true;\r\n            if (Key.isHit(Key.R)) {\r\n                this.reset();\r\n            }\r\n        }\r\n        if (Key.isHit(Key.R)) {\r\n            this.reset();\r\n        }\r\n        if (Key.isHit(Key.M)) {\r\n            this.levelCount = 0;\r\n            this.start(true);\r\n        }\r\n        if (!this.currentlyDead) {\r\n            this.entityManager.update(this.grid, dt);\r\n        }\r\n        this.checkWin();\r\n    }\r\n\r\n    renderLevelTransition(ctx) {\r\n        if (this.levelTransition) {\r\n            this.levelTransition.render(ctx);\r\n            if (this.levelTransition.done) {\r\n                this.levelTransition = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkWin() {\r\n        if (this.entityManager.levelConfig.noFail) {\r\n            return;\r\n        }\r\n        if (this.grid.totalPurple <= 0) {\r\n            if (!this.levelTransition) {\r\n                this.levelTransition = new LevelTransition(\"Mission Failed\", () => {\r\n                    this.start(false);\r\n                }, 30);\r\n            }\r\n        }\r\n        if (this.grid.totalPurple >= this.entityManager.levelConfig.goal) {\r\n            if (!this.levelTransition) {\r\n                this.levelCount++;\r\n                if (this.levelCount >= level_configs.length) {\r\n                    this.levelCount = 0;\r\n                    this.start(true);\r\n                    return;\r\n                }\r\n                this.levelTransition = new LevelTransition(level_configs[this.levelCount].message, () => {\r\n                    this.start(false);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    processGridForLava() {\r\n        for (let x = 0; x < this.grid.width; x++) {\r\n            for (let y = 0; y < this.grid.height; y++) {\r\n                if (this.grid.tiles[x + y*this.grid.width] === 6) {\r\n                    //lava\r\n                    this.grid.tiles[x + y*this.grid.width] = 1;\r\n                    if (Math.random() > .9) {\r\n                        this.fluidManager.particles.push(new FluidParticle(x*this.grid.tileSize, y*this.grid.tileSize, 1));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Mouse } from \"./mouse\";\r\n\r\nexport class UI {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.buttonList = [];\r\n    }\r\n    \r\n    setupMainMenu(ctx) {\r\n        ctx.font = '40px cousine';\r\n        let w = 325;\r\n        let h = 100;\r\n        let p = {\r\n            x: this.x / 2 - w / 2,\r\n            y: this.y / 2 - h / 2 - 200\r\n        };\r\n        let lp = {\r\n                x: this.x / 2 - w / 6,\r\n                y: this.y / 2 + parseInt(ctx.font) / 4 - 200\r\n        };\r\n        let startButton = new Button(w, h, p, lp, 'START');\r\n        startButton.hit = () => {\r\n            return \"START_GAME_EVENT\";\r\n        }\r\n        this.buttonList.push(startButton);\r\n    }\r\n\r\n    update(ctx) {\r\n        // check which button mouse is inside\r\n        if (Mouse.leftHit()) {\r\n            let mousePos = {\r\n                x: Mouse.x,\r\n                y: Mouse.y,\r\n            };\r\n            let event = '';\r\n            for (let i = 0; i < this.buttonList.length; i++) {\r\n                console.log(mousePos);\r\n                console.log(this.buttonList[i].position);\r\n                if (this.isInside(mousePos, this.buttonList[i])) {\r\n                    event = this.buttonList[i].hit();\r\n                    if (event === \"START_GAME_EVENT\") {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render(ctx) {\r\n        for (let i = 0; i < this.buttonList.length; i++) {\r\n            this.buttonList[i].render(ctx);\r\n        }\r\n    }\r\n\r\n    isInside(pos, rect){\r\n        let r = pos.x > rect.position.x && \r\n                pos.x < rect.position.x+rect.w && \r\n                pos.y < rect.position.y+rect.h && \r\n                pos.y > rect.position.y;\r\n        return r; \r\n    }   \r\n}\r\n\r\nexport class Button {\r\n    constructor(w, h, pos, lpos, text) {\r\n        this.w = w;\r\n        this.h = h;\r\n        this.position = pos;\r\n        this.labelPosition = lpos;\r\n        this.text = text;\r\n        this.hit = () => {\r\n            console.log('default button hit');\r\n        };\r\n    }\r\n\r\n    render(ctx) {\r\n        ctx.font = '40px cousine';\r\n        ctx.beginPath();\r\n        ctx.rect(this.position.x, this.position.y , this.w, this.h); \r\n        ctx.fillStyle = '#FFFFFF'; \r\n        ctx.fillStyle = 'rgba(225,225,225,0.5)';\r\n        ctx.fill(); \r\n        ctx.lineWidth = 2;\r\n        ctx.strokeStyle = '#000000'; \r\n        ctx.stroke();\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#000000';\r\n        ctx.fillStyle = '#FFFFFF';\r\n        ctx.fillText(this.text, this.labelPosition.x, this.labelPosition.y);\r\n    }\r\n}","import { Mouse } from \"./mouse\";\r\nimport { HUD } from \"./hud\";\r\nimport { GameState } from \"./gamestate\";\r\nimport { UI } from \"./ui\";\r\nimport { LevelTransition } from \"./leveltransition\";\r\nimport { level_configs } from \"./levels\";\r\n\r\nlet ctx = null;\r\nconst screenW = 1280;\r\nconst screenH = 720;\r\n\r\nlet gs = new GameState(screenW, screenH);\r\nlet hud = new HUD(screenW, screenH);\r\nlet ui = new UI(screenW, screenH);\r\nlet stars = new Image(screenW, screenH);\r\nlet oldTime = 0;\r\n\r\nexport function startGame(context) {\r\n    \r\n    let canv = document.createElement('canvas');\r\n    canv.width = screenW;\r\n    canv.height = screenW;\r\n    let cctx = canv.getContext('2d');\r\n    cctx.fillStyle = '#ffffff';\r\n    for (let i = 0; i < 500; i++) {\r\n        let x = Math.random() * screenW;\r\n        let y = Math.random() * screenW;\r\n        let w = Math.floor(Math.random() * 1) + 1;\r\n        cctx.fillRect(x,y,w,w);\r\n    }\r\n    stars.src = canv.toDataURL('image/png');\r\n\r\n    ctx = context;\r\n    Mouse.init(ctx.canvas);\r\n    ui.setupMainMenu(ctx)\r\n    gs.start(true)\r\n    if (ctx) {\r\n        requestAnimationFrame(render);\r\n    }\r\n}\r\n\r\nfunction clear() {\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = \"#000000\";\r\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n}\r\n\r\nfunction render(delta) {\r\n    let dt = (delta-oldTime)/1000;\r\n    oldTime = delta;\r\n    clear();\r\n\r\n    //if (!gs.inMainMenu) {\r\n        if (gs.entityManager) {\r\n            if (!gs.inMainMenu) {\r\n                gs.cam.update({ x: gs.player.x, y: gs.player.y });\r\n            } else {\r\n                let c = gs.grid.width*gs.grid.tileSize/2;\r\n                let a = new Date().getTime()/16000.0;\r\n\r\n                gs.cam.update({ x: c+Math.sin(a)*200*4, y: c+Math.cos(a)*200*4});\r\n            }\r\n\r\n            ctx.transform(1, 0,\r\n                0, 1,\r\n                screenW/2, screenH/2);\r\n            ctx.transform(Math.cos(gs.cam.angle), -Math.sin(gs.cam.angle), Math.sin(gs.cam.angle), Math.cos(gs.cam.angle), 0, 0);\r\n            ctx.drawImage(stars, -screenW/2, -screenW/2);\r\n            ctx.resetTransform();\r\n\r\n\r\n            let diffX = gs.cam.position.x - gs.grid.width*gs.grid.tileSize/2;\r\n            let diffY = gs.cam.position.y - gs.grid.height*gs.grid.tileSize/2;\r\n            gs.cam.angle = Math.atan2(diffY, diffX) + Math.PI/2;\r\n            ctx.transform(1, 0,\r\n                        0, 1,\r\n                        screenW/2, screenH/2);\r\n            ctx.transform(Math.cos(gs.cam.angle), -Math.sin(gs.cam.angle), Math.sin(gs.cam.angle), Math.cos(gs.cam.angle), 0, 0);\r\n            ctx.transform(gs.cam.zoom, 0,\r\n                        0, gs.cam.zoom,\r\n                        0, 0);\r\n            ctx.transform(1, 0,\r\n                        0, 1,\r\n                        -Math.floor(gs.cam.getCorner().x), -Math.floor(gs.cam.getCorner().y));\r\n\r\n            gs.update(dt);\r\n\r\n            let cx = gs.grid.width*gs.grid.tileSize/2;\r\n            let levelRad = (gs.entityManager.levelConfig.outerRadius-30)*gs.grid.tileSize;\r\n            let grad = ctx.createRadialGradient(cx,cx,levelRad,cx,cx,levelRad+180);\r\n            grad.addColorStop(0, '#87CEEB');\r\n            grad.addColorStop(1, 'rgba(0,0,0,0)');\r\n            ctx.fillStyle = grad;\r\n            ctx.fillRect(0,0,cx*2, cx*2);\r\n            gs.grid.renderChunks(ctx);\r\n            gs.entityManager.render(ctx);\r\n            gs.fluidManager.render(ctx);\r\n            if (!gs.inMainMenu) {\r\n                hud.render(ctx, gs.player, gs);\r\n            }\r\n        }\r\n    ctx.resetTransform();\r\n    //} else {\r\n    if (gs.inMainMenu) {\r\n        let mainMenu = true;\r\n        if (!gs.levelTransition) {\r\n            mainMenu = ui.update(ctx);\r\n        }\r\n        ui.render(ctx);\r\n        if (!mainMenu) {\r\n            gs.levelTransition = new LevelTransition(level_configs[gs.levelCount].message, () => {\r\n                gs.inMainMenu = false;\r\n                gs.start(false);\r\n            });\r\n        }\r\n    }\r\n    gs.renderLevelTransition(ctx);\r\n\r\n    requestAnimationFrame(render);\r\n}","import { startGame } from \"./main\";\r\n\r\nfunction initCanvas(id) {\r\n  let canvas = document.getElementById(id);\r\n  canvas.width = 1280;\r\n  canvas.height = 720;\r\n  let ctx = canvas.getContext('2d');\r\n  return ctx;\r\n}\r\n\r\nstartGame(initCanvas('gamecanvas'));"],"sourceRoot":""}